name: Common Deploy Workflow

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      target:
        required: true
        type: string
      id:
        required: true
        type: string
      expires:
        required: false
        type: string
      project_id:
        required: false
        type: string
        description: "Firebase project name"
    secrets:
      GPT_API_KEY:
        required: true
      ORGANIZATION_OPENAI:
        required: true
      FIREBASE_SERVICE_ACCOUNT_UV_1_2025:
        required: true
      FIREBASE_API_KEY:
        required: true
      FIREBASE_AUTH_DOMAIN:
        required: true
      FIREBASE_PROJECT_ID:
        required: true
      FIREBASE_STORAGE_BUCKET:
        required: true
      FIREBASE_MESSAGING_SENDER_ID:
        required: true
      FIREBASE_APP_ID:
        required: true
      FIREBASE_MEASUREMENT_ID:
        required: true
    outputs:
      details_url:
        description: "Preview URL for the deployment"
        value: ${{ jobs.deploy.outputs.details_url }}

jobs:
  deploy:
    name: Deploy to Firebase ${{ inputs.environment }}
    runs-on: ubuntu-latest
    outputs:
      details_url: ${{ steps.deploy_firebase.outputs.details_url }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "yarn"

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build
        run: yarn build
        env:
          GPT_API_KEY: ${{ secrets.GPT_API_KEY }}
          ORGANIZATION_OPENAI: ${{ secrets.ORGANIZATION_OPENAI }}
          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
          FIREBASE_MEASUREMENT_ID: ${{ secrets.FIREBASE_MEASUREMENT_ID }}

      - name: Deploy to Firebase
        id: deploy_firebase
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.PERSONAL_GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_UV_1_2025 }}'
          projectId: ${{ secrets.FIREBASE_PROJECT_ID }}
          channelId: ${{ inputs.id }}
          target: ${{ inputs.target }}
          expires: ${{ inputs.expires }}

      - name: Link to Preview
        if: inputs.environment == 'Ephemeral'
        run: |
          echo "Full Deploy Output:"
          URL="${{ steps.deploy_firebase.outputs.details_url }}"
          echo "ðŸ”— [Open Preview](${URL/stg-***--/stg-${{ inputs.project_id }}--})"